[ignore]
__pycache__/
*.pyc
*.pyo
*.pyd
venv/
.poetry/
.env
.lock
.cache/

data/
logs/
dist/

[autocomplete]
enabled = true
languages = python, json, yaml, markdown

[codemod]
enabled = true

[rules]
"**/*.json" = { autocomplete = true, explanation = "Enable AI for JSON files" }
"**/*.yaml" = { autocomplete = true, explanation = "Enable AI for YAML configuration files" }
"**/Dockerfile" = { autocomplete = false, explanation = "Ensure Dockerfiles remain manually crafted" }
"**/poetry.lock" = { autocomplete = false, explanation = "Avoid modifying Poetry lock file manually" }
"**/requirements.txt" = { autocomplete = false, explanation = "Poetry manages dependencies, so this file should not be modified manually" }

[lessons]
# Instructions

During your interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.cursorrules` file so you will not make the same mistake again. 

You should also use the `.cursorrules` file as a Scratchpad to organize your thoughts. Especially when you receive a new task, you should first review the content of the Scratchpad, clear old different task if necessary, first explain the task, and plan the steps you need to take to complete the task. You can use todo markers to indicate the progress, e.g.
[X] Task 1
[ ] Task 2

Also update the progress of the task in the Scratchpad when you finish a subtask.
Especially when you finished a milestone, it will help to improve your depth of task accomplishment to use the Scratchpad to reflect and plan.
The goal is to help you maintain a big picture as well as the progress of the task. Always refer to the Scratchpad when you plan the next step.


# User Specified Lessons
- Use Python virtual environment in ./venv.
- Include useful debugging information in program output.
- Read a file before attempting to edit it.
- For multiline commit messages in `git` and `gh`, write the message in a file and use `git commit -F <filename>`. Then remove the file. Include "[Cursor] " in commit messages and PR titles.

# Cursor Learned Lessons
- Handle UTF-8 encoding correctly in search results.
- Send debug information to stderr while keeping stdout clean for pipeline integration.
- Use 'seaborn-v0_8' instead of 'seaborn' as the style name in matplotlib.
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities.

[scratchpad]
# Task Planning & Progress Tracking
# Use this section to plan and track tasks

